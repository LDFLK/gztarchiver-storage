name: gztarchiver

on:
  schedule:
    - cron: "0 */8 * * *"  # every 8 hours
  workflow_dispatch:        # allows manual trigger

env:
  TZ: Asia/Colombo  # Set Sri Lankan Time zone globally

jobs:
  run-archiver:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout storage repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TARGET_REPO_PAT }}
       
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
       
      - name: Install archiver package
        run: pip install git+https://github.com/yasandu0505/gztarchiver.git
       
      - name: Create config.yaml from secret
        run: |
          echo "${{ secrets.GZTARCHIVER_CONFIG }}" > config.yaml
       
      - name: Determine next year to process
        env:
          TZ: Asia/Colombo  # Ensure Sri Lankan time for this step
        run: |
          # Define years to cycle through
          declare -a YEARS=(
            "2010"
            "2015"
            "2016"
            "2017"
            "2018"
            "2019"
            "2020"
            "2021"
            "2022"
            "2023"
            "2024"
          )
          
          # Check if cycle counter file exists, if not create it
          if [[ ! -f cycle_counter.txt ]]; then
            echo "0" > cycle_counter.txt
          fi
          
          # Read current cycle index
          CYCLE_INDEX=$(cat cycle_counter.txt)
          
          # Check if already completed
          if [[ "$CYCLE_INDEX" == "COMPLETED" ]]; then
            echo "✅ All years already processed. Archive is complete!"
            echo "🛑 Workflow stopping - no more years to process."
            exit 0
          fi
          
          # Check if cycle index is valid
          if [[ $CYCLE_INDEX -ge ${#YEARS[@]} ]]; then
            echo "✅ All years already processed. Archive is complete!"
            echo "COMPLETED" > cycle_counter.txt
            exit 0
          fi
          
          # Get the year for this cycle
          YEAR=${YEARS[$CYCLE_INDEX]}
          
          echo "🔄 Processing cycle: $((CYCLE_INDEX + 1)) of ${#YEARS[@]}"
          echo "📅 Processing year: $YEAR"
          
          # Run the archiver for this year
          gztarchiver --year $YEAR --lang en --config config.yaml
          
          # Update cycle counter for next run
          NEXT_INDEX=$((CYCLE_INDEX + 1))
          
          # Check if we've completed all years
          if [[ $NEXT_INDEX -ge ${#YEARS[@]} ]]; then
            echo "✅ COMPLETED ALL YEARS! Archive process finished."
            echo "COMPLETED" > cycle_counter.txt
          else
            echo "$NEXT_INDEX" > cycle_counter.txt
            echo "➡️  Next run will process: ${YEARS[$NEXT_INDEX]}"
          fi
          
          # Clean up metadata
          rm -rf metadata
       
      - name: Commit and push changes
        env:
          TZ: Asia/Colombo  # Ensure Sri Lankan time for commit timestamps
        run: |
          git config user.name "yasandu0505"
          git config user.email "yasanduyaka2005@gmail.com"
          git add doc-archive cycle_counter.txt
          
          # Simplify commit message with Sri Lankan time
          CURRENT_CYCLE=$(cat cycle_counter.txt)
          if [[ "$CURRENT_CYCLE" == "COMPLETED" ]]; then
            COMMIT_MSG="🔄 Final archive update - All years completed - $(date '+%Y-%m-%d %H:%M:%S %Z')"
          else
            PREV_CYCLE=$((CURRENT_CYCLE - 1))
            declare -a YEARS=( "2010" "2015" "2016" "2017" "2018" "2019" "2020" "2021" "2022" "2023" "2024")
            PROCESSED_YEAR=${YEARS[$PREV_CYCLE]}
            COMMIT_MSG="🔄 Auto-update archive - Year $PROCESSED_YEAR - $(date '+%Y-%m-%d %H:%M:%S %Z')"
          fi
          
          git commit -m "$COMMIT_MSG" || echo "No changes to commit"
          git push origin main 
             
      - name: Update README with status
        env:
          TZ: Asia/Colombo  # Ensure Sri Lankan time for README timestamps
        run: |
          # Get timestamp in Sri Lankan time
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S %Z')
          
          # Read current cycle info
          CYCLE_INDEX=$(cat cycle_counter.txt)
          declare -a YEARS=( "2010" "2015" "2016" "2017" "2018" "2019" "2020" "2021" "2022" "2023" "2024")
          
          # Determine status
          if [[ "$CYCLE_INDEX" == "COMPLETED" ]]; then
            NEXT_YEAR="✅ ALL COMPLETE"
            CYCLE_STATUS="All ${#YEARS[@]} years processed - Archive complete!"
          else
            NEXT_YEAR=${YEARS[$CYCLE_INDEX]}
            CYCLE_STATUS="$((CYCLE_INDEX + 1)) of ${#YEARS[@]} years completed"
          fi
          
          # Count documents
          TOTAL_DOCS=$(find doc-archive -type f -name "*.pdf" | wc -l)
          TOTAL_UNAVAILABLE=$(find doc-archive -type f -name "unavailable.txt" | wc -l)
          
          # Extract date range from directory structure
          if [ $TOTAL_DOCS -gt 0 ]; then
            ALL_DATES=$(find doc-archive -type f \( -name "*.pdf" -o -name "unavailable.txt" \) | \
              grep -oE '[0-9]{4}/[0-9]{2}/[0-9]{2}' | \
              sed 's|/|-|g' | \
              sort -u)
            
            if [ -n "$ALL_DATES" ]; then
              START_DATE=$(echo "$ALL_DATES" | head -1)
              END_DATE=$(echo "$ALL_DATES" | tail -1)
              DATE_RANGE="from $START_DATE to $END_DATE"
            else
              DATE_RANGE="date range unavailable"
            fi
          else
            DATE_RANGE=""
          fi
          
          # Generate per-year summary
          SUMMARY_TABLE=$(
            find doc-archive -type f -name "*.pdf" | awk -F'/' '{print $2}' | sort | uniq -c > /tmp/archived_counts.txt
            find doc-archive -type f -name "unavailable.txt" | awk -F'/' '{print $2}' | sort | uniq -c > /tmp/unavailable_counts.txt
            
            awk '
            BEGIN { 
                while ((getline line < "/tmp/archived_counts.txt") > 0) {
                    split(line, a); archived[a[2]] = a[1]
                }
                while ((getline line < "/tmp/unavailable_counts.txt") > 0) {
                    split(line, u); unavailable[u[2]] = u[1]
                }
                close("/tmp/archived_counts.txt")
                close("/tmp/unavailable_counts.txt")
                
                for (year in archived) years[year] = 1
                for (year in unavailable) years[year] = 1
                
                n = asorti(years, sorted_years)
                for (i = 1; i <= n; i++) {
                    year = sorted_years[i]
                    arch_count = (year in archived) ? archived[year] : 0
                    unav_count = (year in unavailable) ? unavailable[year] : 0
                    printf "| %s | %s | %s |\n", year, arch_count, unav_count
                }
            }'
          )
          
          # Write README.md
          cat <<EOF > README.md
          # Sri Lanka 🇱🇰 - Gazette Dataset
          
          Last Updated: $TIMESTAMP
          
          $TOTAL_DOCS documents, $DATE_RANGE.
    
          🛠️ #Under construction
          
          ---
          
          ## 📊 Archive Status Dashboard
          
          **Last Archiver Run:** $TIMESTAMP  
          **Next Scheduled Year:** $NEXT_YEAR  
          **Cycle Progress:** $CYCLE_STATUS
          
          **Summary of Documents Archived:**
          
          | Year | Archived Docs | Unavailable Docs |
          |------|---------------|-----------------|
          $SUMMARY_TABLE
          
          **Total Documents:** $TOTAL_DOCS  
          **Unavailable Documents:** $TOTAL_UNAVAILABLE 
          
          ---
          
          ### 🔄 Processing Schedule (Every 8 Hours, Sri Lankan Time)
          Processes years in order: 2010 → 2015 → 2016 → 2017 → 2018 → 2019 → 2020 → 2021 → 2022 → 2023 → 2024 → **STOP**
          
          ---
          #OpenData #Govgazette #LankaDataFoundation
          EOF
          
          # Commit and push README.md
          git config user.name "yasandu0505"
          git config user.email "yasanduyaka2005@gmail.com"
          git add README.md
          git commit -m "📊 Update status dashboard - $TIMESTAMP" || echo "No changes to commit"
          git push origin main