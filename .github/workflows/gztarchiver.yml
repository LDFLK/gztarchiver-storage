name: gztarchiver

on:
  schedule:
    - cron: "0 */3 * * *"  # every 2 hours
  workflow_dispatch:        # allows manual trigger

env:
  TZ: Asia/Colombo  # Set Sri Lankan Time zone globally

jobs:
  run-archiver:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout storage repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TARGET_REPO_PAT }}
       
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
       
      - name: Install archiver package
        run: pip install git+https://github.com/yasandu0505/gztarchiver.git
       
      - name: Create config.yaml from secret
        run: |
          echo "${{ secrets.GZTARCHIVER_CONFIG }}" > config.yaml
       
      - name: Determine next year-month to process
        env:
          TZ: Asia/Colombo  # Ensure Sri Lankan time for this step
        run: |
          # Define years to cycle through
          declare -a YEARS=(
            "2015"
            "2016"
            "2017"
            "2018"
            "2019"
            "2020"
            "2021"
            "2022"
            "2023"
            "2024"
          )
          
          # Define months
          declare -a MONTHS=(1 2 3 4 5 6 7 8 9 10 11 12)
          
          # Check if cycle counter file exists, if not create it
          if [[ ! -f cycle_counter.txt ]]; then
            echo "0" > cycle_counter.txt
          fi
          
          # Check if month counter file exists, if not create it
          if [[ ! -f month_counter.txt ]]; then
            echo "0" > month_counter.txt
          fi
          
          # Read current cycle indices
          YEAR_INDEX=$(cat cycle_counter.txt)
          MONTH_INDEX=$(cat month_counter.txt)
          
          # Check if already completed
          if [[ "$YEAR_INDEX" == "COMPLETED" ]]; then
            echo "‚úÖ All years and months already processed. Archive is complete!"
            echo "üõë Workflow stopping - no more processing needed."
            exit 0
          fi
          
          # Check if year index is valid
          if [[ $YEAR_INDEX -ge ${#YEARS[@]} ]]; then
            echo "‚úÖ All years and months already processed. Archive is complete!"
            echo "COMPLETED" > cycle_counter.txt
            echo "COMPLETED" > month_counter.txt
            exit 0
          fi
          
          # Get current year and month
          CURRENT_YEAR=${YEARS[$YEAR_INDEX]}
          CURRENT_MONTH=${MONTHS[$MONTH_INDEX]}
          
          echo "üîÑ Processing year: $CURRENT_YEAR, month: $CURRENT_MONTH"
          echo "üìÖ Year cycle: $((YEAR_INDEX + 1)) of ${#YEARS[@]}, Month: $((MONTH_INDEX + 1)) of ${#MONTHS[@]}"
          
          # Run the archiver for this year-month combination
          gztarchiver --year $CURRENT_YEAR --month $CURRENT_MONTH --lang en --config config.yaml
          
          # Update counters for next run
          NEXT_MONTH_INDEX=$((MONTH_INDEX + 1))
          
          # Check if we've completed all months for this year
          if [[ $NEXT_MONTH_INDEX -ge ${#MONTHS[@]} ]]; then
            # Move to next year, reset month counter
            NEXT_YEAR_INDEX=$((YEAR_INDEX + 1))
            echo "‚úÖ Completed year $CURRENT_YEAR"
            
            # Check if we've completed all years
            if [[ $NEXT_YEAR_INDEX -ge ${#YEARS[@]} ]]; then
              echo "‚úÖ COMPLETED ALL YEARS AND MONTHS! Archive process finished."
              echo "COMPLETED" > cycle_counter.txt
              echo "COMPLETED" > month_counter.txt
            else
              echo "$NEXT_YEAR_INDEX" > cycle_counter.txt
              echo "0" > month_counter.txt
              echo "‚û°Ô∏è  Next run will process: ${YEARS[$NEXT_YEAR_INDEX]}, month: ${MONTHS[0]}"
            fi
          else
            # Stay on same year, increment month
            echo "$NEXT_MONTH_INDEX" > month_counter.txt
            echo "‚û°Ô∏è  Next run will process: $CURRENT_YEAR, month: ${MONTHS[$NEXT_MONTH_INDEX]}"
          fi
          
          # Clean up metadata
          rm -rf metadata
       
      - name: Commit and push changes
        env:
          TZ: Asia/Colombo  # Ensure Sri Lankan time for commit timestamps
        run: |
          git config user.name "yasandu0505"
          git config user.email "yasanduyaka2005@gmail.com"
          git add doc-archive cycle_counter.txt month_counter.txt
          
          # Create commit message with current processing info
          YEAR_INDEX=$(cat cycle_counter.txt)
          MONTH_INDEX=$(cat month_counter.txt)
          
          if [[ "$YEAR_INDEX" == "COMPLETED" ]]; then
            COMMIT_MSG="üéâ Final archive update - All years and months completed - $(date '+%Y-%m-%d %H:%M:%S %Z')"
          else
            declare -a YEARS=("2015" "2016" "2017" "2018" "2019" "2020" "2021" "2022" "2023" "2024")
            declare -a MONTHS=(1 2 3 4 5 6 7 8 9 10 11 12)
            
            # Get the previously processed year-month (what we just completed)
            if [[ "$MONTH_INDEX" == "0" && "$YEAR_INDEX" -gt "0" ]]; then
              # We just completed December of previous year
              PREV_YEAR_INDEX=$((YEAR_INDEX - 1))
              PROCESSED_YEAR=${YEARS[$PREV_YEAR_INDEX]}
              PROCESSED_MONTH=12
            elif [[ "$MONTH_INDEX" == "COMPLETED" ]]; then
              PROCESSED_YEAR="ALL"
              PROCESSED_MONTH="ALL"
            else
              # We just completed previous month of current year
              PREV_MONTH_INDEX=$((MONTH_INDEX - 1))
              PROCESSED_YEAR=${YEARS[$YEAR_INDEX]}
              PROCESSED_MONTH=${MONTHS[$PREV_MONTH_INDEX]}
            fi
            
            COMMIT_MSG="üîÑ Auto-update archive - Year $PROCESSED_YEAR Month $PROCESSED_MONTH - $(date '+%Y-%m-%d %H:%M:%S %Z')"
          fi
          
          git commit -m "$COMMIT_MSG" || echo "No changes to commit"
          git push origin main 
             
      - name: Update README with status
        env:
          TZ: Asia/Colombo  # Ensure Sri Lankan time for README timestamps
        run: |
          # Get timestamp in Sri Lankan time
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S %Z')
          
          # Read current cycle info
          YEAR_INDEX=$(cat cycle_counter.txt)
          MONTH_INDEX=$(cat month_counter.txt)
          declare -a YEARS=("2015" "2016" "2017" "2018" "2019" "2020" "2021" "2022" "2023" "2024")
          declare -a MONTHS=(1 2 3 4 5 6 7 8 9 10 11 12)
          
          # Determine status
          if [[ "$YEAR_INDEX" == "COMPLETED" ]]; then
            NEXT_PROCESSING="‚úÖ ALL COMPLETE"
            CYCLE_STATUS="All ${#YEARS[@]} years (132 months total) processed - Archive complete!"
            TOTAL_MONTHS_PROCESSED=132
          else
            CURRENT_YEAR=${YEARS[$YEAR_INDEX]}
            CURRENT_MONTH=${MONTHS[$MONTH_INDEX]}
            NEXT_PROCESSING="Year $CURRENT_YEAR, Month $CURRENT_MONTH"
            
            # Calculate total months processed
            TOTAL_MONTHS_PROCESSED=$((YEAR_INDEX * 12 + MONTH_INDEX))
            CYCLE_STATUS="$TOTAL_MONTHS_PROCESSED of 132 months completed"
          fi
          
          # Count documents
          TOTAL_DOCS=$(find doc-archive -type f -name "*.pdf" | wc -l)
          TOTAL_UNAVAILABLE=$(find doc-archive -type f -name "unavailable.txt" | wc -l)
          
          # Extract date range from directory structure
          if [ $TOTAL_DOCS -gt 0 ]; then
            ALL_DATES=$(find doc-archive -type f \( -name "*.pdf" -o -name "unavailable.txt" \) | \
              grep -oE '[0-9]{4}/[0-9]{2}/[0-9]{2}' | \
              sed 's|/|-|g' | \
              sort -u)
            
            if [ -n "$ALL_DATES" ]; then
              START_DATE=$(echo "$ALL_DATES" | head -1)
              END_DATE=$(echo "$ALL_DATES" | tail -1)
              DATE_RANGE="from $START_DATE to $END_DATE"
            else
              DATE_RANGE="date range unavailable"
            fi
          else
            DATE_RANGE=""
          fi
          
          # Generate per-year summary
          SUMMARY_TABLE=$(
            find doc-archive -type f -name "*.pdf" | awk -F'/' '{print $2}' | sort | uniq -c > /tmp/archived_counts.txt
            find doc-archive -type f -name "unavailable.txt" | awk -F'/' '{print $2}' | sort | uniq -c > /tmp/unavailable_counts.txt
            
            awk '
            BEGIN { 
                while ((getline line < "/tmp/archived_counts.txt") > 0) {
                    split(line, a); archived[a[2]] = a[1]
                }
                while ((getline line < "/tmp/unavailable_counts.txt") > 0) {
                    split(line, u); unavailable[u[2]] = u[1]
                }
                close("/tmp/archived_counts.txt")
                close("/tmp/unavailable_counts.txt")
                
                for (year in archived) years[year] = 1
                for (year in unavailable) years[year] = 1
                
                n = asorti(years, sorted_years)
                for (i = 1; i <= n; i++) {
                    year = sorted_years[i]
                    arch_count = (year in archived) ? archived[year] : 0
                    unav_count = (year in unavailable) ? unavailable[year] : 0
                    printf "| %s | %s | %s |\n", year, arch_count, unav_count
                }
            }'
          )
          
          # Write README.md
          cat <<EOF > README.md
          # Sri Lanka üá±üá∞ - Gazette Dataset
          
          Last Updated: $TIMESTAMP
          
          $TOTAL_DOCS documents, $DATE_RANGE.
    
          üõ†Ô∏è #Under construction
          
          ---
          
          ## üìä Archive Status Dashboard
          
          **Last Archiver Run:** $TIMESTAMP  
          **Next Scheduled Processing:** $NEXT_PROCESSING  
          **Progress:** $CYCLE_STATUS
          
          **Summary of Documents Archived:**
          
          | Year | Archived Docs | Unavailable Docs |
          |------|---------------|-----------------|
          $SUMMARY_TABLE
          
          **Total Documents:** $TOTAL_DOCS  
          **Unavailable Documents:** $TOTAL_UNAVAILABLE 
          
          ---
          
          ### üîÑ Processing Schedule (Every 3 Hours, Sri Lankan Time)
          Processes **one month per run** in order:  
          2015: Jan‚ÜíFeb‚ÜíMar‚Üí...‚ÜíDec ‚Üí 2016: Jan‚ÜíFeb‚ÜíMar‚Üí...‚ÜíDec ‚Üí ... ‚Üí 2024: Jan‚ÜíFeb‚ÜíMar‚Üí...‚ÜíDec ‚Üí **COMPLETE**
          
          **Estimated Time:** ~36 hours per year (12 months √ó 3 hours each)
          
          ---
          #OpenData #Govgazette #LankaDataFoundation
          EOF
          
          # Commit and push README.md
          git config user.name "yasandu0505"
          git config user.email "yasanduyaka2005@gmail.com"
          git add README.md
          git commit -m "üìä Update status dashboard - $TIMESTAMP" || echo "No changes to commit"
          git push origin main